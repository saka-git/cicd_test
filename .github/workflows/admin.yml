name: Adminのデプロイ

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_NAME: admin
      BRANCH_NAME: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
    steps:
      - name: 確認
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 差分があるかを比較
        id: diff
        run: |
          # TODO: ここ変える!mainとdevelopの場合は差分がないとみなす
          if [ ${{ env.BRANCH_NAME }} = "main" ] || [ ${{ env.BRANCH_NAME }} = "develop" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            # TODO: pushの場合、developとの差分を比較する
            if [ "${{ github.event_name }}" = "push" ]; then
              # develop ブランチとの比較を行う
              git fetch origin develop --depth=1
              CHANGED_FILES=$(git diff --name-only origin/develop HEAD)
              echo "Changed files:"
              echo "$CHANGED_FILES"

              if echo "$CHANGED_FILES" | grep -qE "^packages/core-api/|^packages/typebase/src/supabase/"; then
                echo "changed=true" >> $GITHUB_OUTPUT
              else
                echo "changed=false" >> $GITHUB_OUTPUT
              fi
            else
              git fetch origin ${{ github.base_ref }} --depth=1
              CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD)
              echo "Changed files:"
              echo "$CHANGED_FILES"
              if echo "$CHANGED_FILES" | grep -qE "^packages/core-api/|^packages/typebase/src/supabase/"; then
                echo "changed=true" >> $GITHUB_OUTPUT
              else
                echo "changed=false" >> $GITHUB_OUTPUT
              fi
            fi
          fi

      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}

      - name: Node.jsをインストール
        uses: ./.github/actions/node

      - name: pnpmでVercel CLIをインストール
        run: pnpm add --global vercel@latest

      - name: デプロイ
        uses: ./.github/actions/vercel/deploy
        with:
          environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
          vercel_team_id: ${{ secrets.VERCEL_TEAM_ID }}
          is_diff: ${{ steps.diff.outputs.changed }}

      - name: プルリクエストにプレビューリンクをコメント
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/github/preview.yml
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          vercel_url: ${{ env.DEPLOY_URL }}
          app_name: ${{ env.APP_NAME }}
          alias_url: ${{ env.ALIAS_URL }}
